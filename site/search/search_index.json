{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"play-with-torch Repository for playing the computer vision apps: Vehicle classification on Raspberry Pi. Tools Tested Hardware RasberryPi 4 Model B here , RAM: 4 GB and Processor 4-core @ 1.5 GHz microSD Card 64 GB 5M USB Retractable Clip 120 Degrees WebCam Web Wide-angle Camera Laptop U7 Mini or Raspi Camera Tested Software Ubuntu Desktop 20.10 aarch64 64 bit , install on RasberriPi 4 PyTorch: torch 1.6.0 aarch64 and torchvision 0.7.0 aarch64 Python min. ver. 3.6 (3.8 recommended) Install the prerequisites Install packages $ sudo apt install build-essential make cmake git python3-pip libatlas-base-dev $ sudo apt install libssl-dev $ sudo apt install libopenblas-dev libblas-dev m4 python3-yaml $ sudo apt install libomp-dev make swap space to 2048 MB $ free -h $ sudo swapoff -a $ sudo dd if=/dev/zero of=/swapfile bs=1M count=2048 $ sudo mkswap /swapfile $ sudo swapon /swapfile $ free -h Install torch 1.6.0 $ pip3 install torch-1.6.0a0+b31f58d-cp38-cp38-linux_aarch64.whl Folder Structure play-with-torch/ \u251c\u2500\u2500 inference.py - main script to inference model \u251c\u2500\u2500 train.py - main script to start training \u251c\u2500\u2500 test.py - evaluation of trained model \u2502 \u251c\u2500\u2500 config.json - holds configuration for training \u251c\u2500\u2500 parse_config.py - class to handle config file and cli options \u2502 \u251c\u2500\u2500 docs/ - for documentation \u2502 \u2514\u2500\u2500 play-with-torch.tex \u2502 \u251c\u2500\u2500 templates/ - for serving model on Flask \u2502 \u2514\u2500\u2500 index.html \u2502 \u251c\u2500\u2500 base/ - abstract base classes \u2502 \u251c\u2500\u2500 base_data_loader.py \u2502 \u251c\u2500\u2500 base_model.py \u2502 \u2514\u2500\u2500 base_trainer.py \u2502 \u251c\u2500\u2500 data_loader/ - anything about data loading goes here \u2502 \u2514\u2500\u2500 data_loaders.py \u2502 \u251c\u2500\u2500 data/ - default directory for storing input data \u2502 \u251c\u2500\u2500 model/ - models, losses, and metrics \u2502 \u251c\u2500\u2500 model.py \u2502 \u251c\u2500\u2500 metric.py \u2502 \u2514\u2500\u2500 loss.py \u2502 \u251c\u2500\u2500 saved/ \u2502 \u251c\u2500\u2500 models/ - trained models are saved here \u2502 \u2514\u2500\u2500 log/ - default logdir for tensorboard and logging output \u2502 \u251c\u2500\u2500 trainer/ - trainers \u2502 \u2514\u2500\u2500 trainer.py \u2502 \u251c\u2500\u2500 logger/ - module for tensorboard visualization and logging \u2502 \u251c\u2500\u2500 visualization.py \u2502 \u251c\u2500\u2500 logger.py \u2502 \u2514\u2500\u2500 logger_config.json \u2502 \u2514\u2500\u2500 utils/ - small utility functions \u251c\u2500\u2500 util.py \u2514\u2500\u2500 ... Usage $ git clone https://github.com/mheriyanto/play-with-torch.git $ cd play-with-torch $ python3 inference.py --source /dev/video0 TO DO [ ] Implement Unit-Test: Test-Driven Development (TDD) Credit to Share PyTorch binaries built for Raspberry Pi Reference Yunjey Choi - PyTorch Tutorial for Deep Learning Researchers here Victor Huang - PyTorch Template Project ( here )","title":"Home"},{"location":"#play-with-torch","text":"Repository for playing the computer vision apps: Vehicle classification on Raspberry Pi.","title":"play-with-torch"},{"location":"#tools","text":"","title":"Tools"},{"location":"#tested-hardware","text":"RasberryPi 4 Model B here , RAM: 4 GB and Processor 4-core @ 1.5 GHz microSD Card 64 GB 5M USB Retractable Clip 120 Degrees WebCam Web Wide-angle Camera Laptop U7 Mini or Raspi Camera","title":"Tested Hardware"},{"location":"#tested-software","text":"Ubuntu Desktop 20.10 aarch64 64 bit , install on RasberriPi 4 PyTorch: torch 1.6.0 aarch64 and torchvision 0.7.0 aarch64 Python min. ver. 3.6 (3.8 recommended)","title":"Tested Software"},{"location":"#install-the-prerequisites","text":"Install packages $ sudo apt install build-essential make cmake git python3-pip libatlas-base-dev $ sudo apt install libssl-dev $ sudo apt install libopenblas-dev libblas-dev m4 python3-yaml $ sudo apt install libomp-dev make swap space to 2048 MB $ free -h $ sudo swapoff -a $ sudo dd if=/dev/zero of=/swapfile bs=1M count=2048 $ sudo mkswap /swapfile $ sudo swapon /swapfile $ free -h Install torch 1.6.0 $ pip3 install torch-1.6.0a0+b31f58d-cp38-cp38-linux_aarch64.whl","title":"Install the prerequisites"},{"location":"#folder-structure","text":"play-with-torch/ \u251c\u2500\u2500 inference.py - main script to inference model \u251c\u2500\u2500 train.py - main script to start training \u251c\u2500\u2500 test.py - evaluation of trained model \u2502 \u251c\u2500\u2500 config.json - holds configuration for training \u251c\u2500\u2500 parse_config.py - class to handle config file and cli options \u2502 \u251c\u2500\u2500 docs/ - for documentation \u2502 \u2514\u2500\u2500 play-with-torch.tex \u2502 \u251c\u2500\u2500 templates/ - for serving model on Flask \u2502 \u2514\u2500\u2500 index.html \u2502 \u251c\u2500\u2500 base/ - abstract base classes \u2502 \u251c\u2500\u2500 base_data_loader.py \u2502 \u251c\u2500\u2500 base_model.py \u2502 \u2514\u2500\u2500 base_trainer.py \u2502 \u251c\u2500\u2500 data_loader/ - anything about data loading goes here \u2502 \u2514\u2500\u2500 data_loaders.py \u2502 \u251c\u2500\u2500 data/ - default directory for storing input data \u2502 \u251c\u2500\u2500 model/ - models, losses, and metrics \u2502 \u251c\u2500\u2500 model.py \u2502 \u251c\u2500\u2500 metric.py \u2502 \u2514\u2500\u2500 loss.py \u2502 \u251c\u2500\u2500 saved/ \u2502 \u251c\u2500\u2500 models/ - trained models are saved here \u2502 \u2514\u2500\u2500 log/ - default logdir for tensorboard and logging output \u2502 \u251c\u2500\u2500 trainer/ - trainers \u2502 \u2514\u2500\u2500 trainer.py \u2502 \u251c\u2500\u2500 logger/ - module for tensorboard visualization and logging \u2502 \u251c\u2500\u2500 visualization.py \u2502 \u251c\u2500\u2500 logger.py \u2502 \u2514\u2500\u2500 logger_config.json \u2502 \u2514\u2500\u2500 utils/ - small utility functions \u251c\u2500\u2500 util.py \u2514\u2500\u2500 ...","title":"Folder Structure"},{"location":"#usage","text":"$ git clone https://github.com/mheriyanto/play-with-torch.git $ cd play-with-torch $ python3 inference.py --source /dev/video0","title":"Usage"},{"location":"#to-do","text":"[ ] Implement Unit-Test: Test-Driven Development (TDD)","title":"TO DO"},{"location":"#credit-to","text":"Share PyTorch binaries built for Raspberry Pi","title":"Credit to"},{"location":"#reference","text":"Yunjey Choi - PyTorch Tutorial for Deep Learning Researchers here Victor Huang - PyTorch Template Project ( here )","title":"Reference"}]}